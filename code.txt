from random import shuffle
import pickle

APOSTAS = []

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Recebe 15 valores informados manualmente, salvando-os como uma aposta.              '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def informar_valores_manualmente()
    
    manual = []
    
    wh = 0
    while wh != 15
        
        print('')
        print('   Informe um Valor Desejado')
        print('')
        xf = int(input('   '))
        print('')
        print('  ----------------------------------------------------------')
 
        if xf  1
                    
            print('')
            print('  ')
            print('  ERRO VALOR INFORMADO ╔ INFERIOR A 01')
            print('  ')
            print('')
            print('  ----------------------------------------------------------')
                    
        elif xf  25
                    
            print('')
            print('  ')
            print('  ERRO VALOR INFORMADO ╔ SUPERIOR A 25')
            print('  ')
            print('')
            print('  ----------------------------------------------------------')
                        
        else
                
            co = manual.count(xf)
                    
            if co == 0
                        
                wh = wh + 1
                    
                manual.append(xf)
                list.sort(manual)
                
                print('')
                print('  VALOR INSERIDO COM SUCESSO  SUA APOSTA')
                print('')
                print(' ', manual)
                print('')
                print('  ----------------------------------------------------------')
            
            else
                        
                print('')
                print('  ')
                print('  ERRO VALOR INFORMADO J┴ FOI INSERIDO')
                print('  ')
                print('')
                print('  ----------------------------------------------------------')

    list.sort(manual)
    APOSTAS.append(manual)              
    
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Cria 15 valores gerados aleatoriamente, salvando-os como uma aposta, (B random).   '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def gerar_valores_aleatoriamente()
    
    random = []
    
    for i in range(25)
        
        i = i + 1
        
        random.append(i)
    
    for i in range(2)
    
        shuffle(random)
    
    for i in range(10)
        
        del random[0]
        
    list.sort(random)
    APOSTAS.append(random)
    
    print('')
    print('  APOSTA GERADA COM SUCESSO  SUA APOSTA')
    print('')
    print(' ', random)
    print('')
    print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Elimina uma aposta salva escolhida manualmente.                                     '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def eliminar_aposta()
    
    le = len(APOSTAS)
    
    print('')
    print('   Informe o N·mero da Aposta a Ser Eliminada')
    print('')
    xf = int(input('   '))
    print('')
    print('  ----------------------------------------------------------')
                
    if xf  1
                    
        print('')
        print('  ')
        print('  ERRO VALOR INFORMADO ╔ INFERIOR A 01')
        print('  ')
        print('')
        print('  ----------------------------------------------------------')
                    
    elif xf  le
                    
        print('')
        print('  ')
        print('  ERRO VALOR INFORMADO ╔ SUPERIOR A', le)
        print('  ')
        print('')
        print('  ----------------------------------------------------------')
                    
    else
                    
        el = xf - 1
                    
        print('')
        print('  APOSTA ESCOLHIDA COM SUCESSO  APOSTA ELIMINADA')
        print('')
        print(' ', APOSTAS[el])
        print('')
        print('  ----------------------------------------------------------')
        
        del APOSTAS[el]
        
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Elimina todas as apostas salvas.                                                    '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def eliminar_todas_as_apostas()
    
    le = len(APOSTAS)

    for i in range(le)
                    
        del APOSTAS[0]
                
    print('')
    print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
    print('  APOSTAS ELIMINADAS COM SUCESSO')
    print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
    print('')
    print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Imprime todas as apostas salvas.                                                    '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def imprimir_lista_de_apostas()
    
    le = len(APOSTAS)
    
    for i in range(le)
                    
        print('')
        print('  APOSTA N┌MERO', i + 1)
        print('')
        print(' ', APOSTAS[i])
        print('')
        print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Recebe 15 valores informados manualmente, salvando-os como um resultado.            '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def informar_resultado_manualmente()
    
    result = []
                
    wh = 0             
    while wh != 15
                        
        print('')
        print('   Informe um Valor do Resultado')
        print('')
        xf = int(input('   '))
        print('')
        print('  ----------------------------------------------------------')
                        
        if xf  1
                            
            print('')
            print('  ')
            print('  ERRO VALOR INFORMADO ╔ INFERIOR A 01')
            print('  ')
            print('')
            print('  ----------------------------------------------------------')
                            
        elif xf  25
                            
            print('')
            print('  ')
            print('  ERRO VALOR INFORMADO ╔ SUPERIOR A 25')
            print('  ')
            print('')
            print('  ----------------------------------------------------------')
                                    
        else
                            
            co = result.count(xf)
                    
            if co == 0
                        
                wh = wh + 1
                    
                result.append(xf)
                list.sort(result)
                        
                print('')
                print('  VALOR INSERIDO COM SUCESSO  SEU RESULTADO')
                print('')
                print(' ', result)
                print('')
                print('  ----------------------------------------------------------')
            
            else
                        
                print('')
                print('  ')
                print('  ERRO VALOR INFORMADO J┴ FOI INSERIDO')
                print('  ')
                print('')
                print('  ----------------------------------------------------------')

    return result

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Cria 15 valores gerados aleatoriamente, salvando-os como um resultado, (B random)   '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def gerar_resultado_aleatoriamente()
    
    result = []

    for i in range(25)
                    
        i = i + 1
                        
        result.append(i)
    
    for i in range(2)
    
        shuffle(result)
                    
    for i in range(10)
                        
        del result[0]
                    
    list.sort(result)
                        
    print('')
    print('  RESULTADO GERADA COM SUCESSO  SEU RESULTADO')
    print('')
    print(' ', result)
    print('')
    print('  ----------------------------------------------------------')
    
    return result

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Compara todas as apostas salvas com um resultado.                                   '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def comparar_lista_de_apostas_com_resultado(result)
    
    le = len(APOSTAS)
     
    for i in range(le)
            
        ap = APOSTAS[i]
                
        ac = 0
                    
        for j in range(15)
                
            for k in range(15)
                    
                if ap[j] == result[k]
                        
                    ac = ac + 1
                    
        nu = i + 1
        
        if ac == 13
            
            pr = 20
            
        elif ac == 12
            
            pr = 8
            
        elif ac == 11
            
            pr = 4
            
        else
            
            pr = 0
            
        if ac  14
        
            print('')
            print('  APOSTA N┌MERO', nu, ' ACERTOS', ac, ' PR╩MIO R$', f'{pr.2f}')
            print('')
            print(' ', ap)
            print('')
            print('  ----------------------------------------------------------')
        
        else
        
            print('')
            print('  APOSTA N┌MERO', nu, ' ACERTOS', ac, ' PR╩MIO VERIFIQUE NO SITE')
            print('')
            print(' ', ap)
            print('')
            print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Arquiva todas as apostas salvas, (B pickle)                                         '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def arquivar_apostas()
    
    try
        
        with open('apostas.bin', 'wb') as arq
            pickle.dump(APOSTAS, arq)
            
            print('')
            print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            print('  APOSTAS ARQUIVADAS COM SUCESSO')
            print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            print('')
            print('  ----------------------------------------------------------')
    
    except Exception as e
        
        print('')
        print('  ')
        print('  ERRO', e)
        print('  ')
        print('')
        print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Carrega todas as apostas arquivas, (B pickle)                                       '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def carregar_apostas()
    
    try
        
        with open('apostas.bin','rb') as arq
            global APOSTAS
            APOSTAS = pickle.load(arq)
            
            print('')
            print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            print('  APOSTAS CARREGADAS COM SUCESSO')
            print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            print('')
            print('  ----------------------------------------------------------')

            
    except Exception as e
        
        print('')
        print('  ')
        print('  ERRO', e)
        print('  ')
        print('')
        print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Confere o n·mero de apostas salvas.                                                 '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def teste_de_contagem()
    
    le = len(APOSTAS)
    
    return le
    
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Printa uma mensagem informando que nуo hс apostas salvas.                           '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def teste_de_registro()
            
    print('')
    print('  ')
    print('  ERRO N├O EXISTEM APOSTAS REGISTRADAS')
    print('  ')
    print('')
    print('  ----------------------------------------------------------')
            
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
''' Printa uma mensagem informando que nуo hс comando correspondente a valor inserido.  '''
'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''
def teste_de_compatibilidade()

    print('')
    print('  ')
    print('  ERRO VALOR INFORMADA ╔ INCONCILI┴VEL')
    print('  ')
    print('')
    print('  ----------------------------------------------------------')

'''иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии'''

op = -1
while op != 0:

    print(''' 
  > 1 - Realizar Apostas | 4 - Comparar Apostas | 
  > 2 - Eliminar Apostas | 5 - Arquivar Apostas | 0 - Sair
  > 3 - Imprimir Apostas | 6 - Carregar Apostas | 
          ''')
    op = int(input('  > '))
    print('')
    print('  |----------------------------------------------------------|')

    if op == 0:

        print('')
        print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
        print('  PROJETO FINALIZADO COM SUCESSO')
        print('  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
        print('')
        print('  |----------------------------------------------------------|')

    elif op == 1:

        op1 = -1

        while op1 != 0:

            print('''
  > 0 - Voltar.
  > 1 - Informar Valores Manualmente
  > 2 - Gerar Valores Aleatoriamente
                  ''')
            op1 = int(input('  > '))
            print('')
            print(
                '  |----------------------------------------------------------|'
            )

            if op1 == 0:

                pass

            elif op1 == 1:

                mod.informar_valores_manualmente()

            elif op1 == 2:

                mod.gerar_valores_aleatoriamente()

            else:

                mod.teste_de_compatibilidade()

    elif op == 2:

        le = mod.teste_de_contagem()

        if le == 0:

            mod.teste_de_registro()

        else:

            op2 = -1

            while op2 != 0:

                print('''
  > 0 - Voltar
  > 1 - Eliminar Aposta
  > 2 - Eliminar Todas as Apostas
                      ''')
                op2 = int(input('  > '))
                print('')
                print(
                    '  |----------------------------------------------------------|'
                )

                if op2 == 0:

                    pass

                elif op2 == 1:

                    mod.imprimir_lista_de_apostas()

                    mod.eliminar_aposta()

                elif op2 == 2:

                    mod.eliminar_todas_as_apostas()

                    op2 = 0

                else:

                    mod.teste_de_compatibilidade()

    elif op == 3:

        le = mod.teste_de_contagem()

        if le == 0:

            mod.teste_de_registro()

        else:

            mod.imprimir_lista_de_apostas()

    elif op == 4:

        le = mod.teste_de_contagem()

        if le == 0:

            mod.teste_de_registro()

        else:

            op4 = -1

            while op4 != 0:

                print('''
  > 0 - Voltar
  > 1 - Informar Resultado Manualmente
  > 2 - Gerar Resultado Aleatoriamente
                      ''')
                op4 = int(input('  > '))
                print('')
                print(
                    '  |----------------------------------------------------------|'
                )

                if op4 == 0:

                    pass

                elif op4 == 1:

                    result = mod.informar_resultado_manualmente()

                    mod.comparar_lista_de_apostas_com_resultado(result)

                elif op4 == 2:

                    result = mod.gerar_resultado_aleatoriamente()

                    mod.comparar_lista_de_apostas_com_resultado(result)

                else:

                    mod.teste_de_compatibilidade()

    elif op == 5:

        le = mod.teste_de_contagem()

        if le == 0:

            mod.teste_deregistro()

        else:

            mod.arquivar_apostas()

    elif op == 6:

        mod.carregar_apostas()

    else:

        mod.teste_de_compatibilidade()
